# Default values for my-app-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hojanchen/my-app-alpine
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1"

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { "hello": "world" }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: { }
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: { }
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [
  {
      "key": "taints",
      "operator": "Equal",
      "value": "nginx1",
      "effect": "NoSchedule", # 值类型有 NoSchedule-不调度，不影响已调度节点上的pod PreferNoSchedule-尽量不调度不合要求的pod到node上， NoExecute-对调度node上的pod进行驱逐且不会调度到其上
  },
  {
    "key": "taints",
    "operator": "Equal",
    "value": "nginx1",
    "effect": "NoExecute", # 值类型有 NoSchedule-不调度，不影响已调度节点上的pod PreferNoSchedule-尽量不调度不合要求的pod到node上， NoExecute-对调度node上的pod进行驱逐且不会调度到其上
  }
]

affinity: {
  "nodeAffinity": {
    "requiredDuringSchedulingIgnoredDuringExecution": {
      "nodeSelectorTerms": [
        {
          "matchExpressions": [ # 将pod调度到Label存在name=nginx1的节点上
            {
              "key": "name",
              "operator": "In", # 值类型有In：label的值在某个列表中 NotIn：label的值不在某个列表中 Gt：label的值大于某个值 Lt：label的值小于某个值 Exists：某个label存在 DoesNotExist：某个label不存在
              "values": [
                  "nginx1"
              ]
            }
          ]
        }
      ]
    }
  }
}

# custom
Username: ChanGe AppHub
